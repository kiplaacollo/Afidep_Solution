// dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
// {	
// 	assembly("ForNav.Reports.6.0.0.2068")
// 	{
// 		type(ForNav.Report_6_0_0_2068; ForNavReport80053_v6_0_0_2068){}   
// 	}
// } // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 80053 "Travel Claim"
{
	RDLCLayout = './Layouts/Travel Claim.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Purchase Header";"Purchase Header")
		{
			column(ReportForNavId_1102755000; 1102755000) {} // Autogenerated by ForNav - Do not delete
			column(No_PurchaseHeader; "Purchase Header"."No.")
			{
			}
			column(ExpectedReceiptDate_PurchaseHeader; "Purchase Header"."Expected Receipt Date")
			{
			}
			column(DocumentDate_PurchaseHeader; "Purchase Header"."Posting Date")
			{
			}
			column(CompanyINfoName; CompanyINfo.Name)
			{
			}
			column(CompanyINfoAdd; CompanyINfo.Address)
			{
			}
			column(CompanyINfoPicture; CompanyINfo.Picture)
			{
			}
			column(ShortcutDimension1Code_PurchaseHeader; "Purchase Header"."Shortcut Dimension 1 Code")
			{
			}
			column(ShortcutDimension2Code_PurchaseHeader; "Purchase Header"."Shortcut Dimension 2 Code")
			{
			}
			column(ChequeNo_PurchaseHeader; "Purchase Header"."Cheque No")
			{
			}
			column(LocationCode_PurchaseHeader; "Purchase Header"."Location Code")
			{
			}
			column(dim1name; Dim1Name)
			{
			}
			column(dim2name; Dim2Name)
			{
			}
			column(UserId; "Purchase Header"."User ID")
			{
			}
			column(RequesterSignature_PurchaseHeader; "Purchase Header"."Requester Signature")
			{
			}
			column(Approver1Name_PurchaseHeader; "Purchase Header".Approver1Name)
			{
			}
			column(Approver1Signature_PurchaseHeader; "Purchase Header".Approver1Signature)
			{
			}
			column(Approver2Name_PurchaseHeader; "Purchase Header".Approver2Name)
			{
			}
			column(Approver2Signature_PurchaseHeader; "Purchase Header".Approver2Signature)
			{
			}
			column(Approver3Name_PurchaseHeader; "Purchase Header".Approver3Name)
			{
			}
			column(Approver3Signature_PurchaseHeader; "Purchase Header".Approver3Signature)
			{
			}
			column(EmployeeName_PurchaseHeader; "Purchase Header"."Employee Name")
			{
			}
			column(Approver1Date_PurchaseHeader; "Purchase Header".Approver1Date)
			{
			}
			column(Approver2Date_PurchaseHeader; "Purchase Header".Approver2Date)
			{
			}
			column(Approver3Date_PurchaseHeader; "Purchase Header".Approver3Date)
			{
			}
			column(RequesterDate_PurchaseHeader; "Purchase Header".RequesterDate)
			{
			}
			column(Purpose_PurchaseHeader; "Purchase Header".Purpose)
			{
			}
			column(PostingDescription_PurchaseHeader; "Purchase Header"."Posting Description")
			{
			}
			dataitem("Purchase Line";"Purchase Line")
			{
				DataItemLink = "Document No."=field("No.");
				DataItemTableView = where("Line Type"=filter(ActionPoints));
				column(ReportForNavId_1102755001; 1102755001) {} // Autogenerated by ForNav - Do not delete
				column(Type_PurchaseLine; "Purchase Line".Type)
				{
				}
				column(No_PurchaseLine; "Purchase Line"."No.")
				{
				}
				column(Description_PurchaseLine; "Purchase Line".Description)
				{
				}
				column(Description2_PurchaseLine; "Purchase Line"."Description 2")
				{
				}
				column(UnitofMeasure_PurchaseLine; "Purchase Line"."Unit of Measure")
				{
				}
				column(Quantity_PurchaseLine; "Purchase Line".Quantity)
				{
				}
				column(ExpectedReceiptDate_PurchaseLine; "Purchase Line"."Expected Receipt Date")
				{
				}
				column(sno; SNo)
				{
				}
				column(inventory; Inventory)
				{
				}
				column(DirectUnitCost_PurchaseLine; "Purchase Line"."Direct Unit Cost")
				{
				}
				column(Amount_PurchaseLine; "Purchase Line".Amount)
				{
				}
				column(Amt; "Purchase Line"."Amount Including VAT")
				{
				}
				column(date_PurchaseLine; "Purchase Line".date)
				{
				}
				column(departureTime_PurchaseLine; "Purchase Line".departureTime)
				{
				}
				column(departurePlace_PurchaseLine; "Purchase Line".departurePlace)
				{
				}
				column(arrivalTime_PurchaseLine; "Purchase Line".arrivalTime)
				{
				}
				column(arrivalPlace_PurchaseLine; "Purchase Line".arrivalPlace)
				{
				}
				column(remarks_PurchaseLine; "Purchase Line".remarks)
				{
				}
				trigger OnAfterGetRecord();
				begin
					SNo+=1;
					if Type=Type::Item then begin
					Item.Get("No.");
					Item.CalcFields(Inventory);
					Inventory:=Item.Inventory;
					end else
					Inventory:=0;
				end;
				
			}
			dataitem(Accomodation;"Purchase Line")
			{
				DataItemLink = "Document No."=field("No.");
				DataItemTableView = where("Line Type"=filter(Activity));
				column(ReportForNavId_33; 33) {} // Autogenerated by ForNav - Do not delete
				column(dateFrom_Accomodation; Accomodation.dateFrom)
				{
				}
				column(dateTo_Accomodation; Accomodation.dateTo)
				{
				}
				column(accomodtionCatered_Accomodation; Accomodation.accomodtionCatered)
				{
				}
				column(locationOfStay_Accomodation; Accomodation.locationOfStay)
				{
				}
				column(location_Accomodation; Accomodation."location.")
				{
				}
				column(noOfDays_Accomodation; Accomodation.noOfDays)
				{
				}
				column(Amount_Accomodation; Accomodation.Amount)
				{
				}
				column(TravelLineTotal_Accomodation; Accomodation."Travel Line Total")
				{
				}
				trigger OnAfterGetRecord();
				begin
					SNo+=1;
					if Type=Type::Item then begin
					Item.Get("No.");
					Item.CalcFields(Inventory);
					Inventory:=Item.Inventory;
					end else
					Inventory:=0;
				end;
				
			}
			dataitem(Meals;"Purchase Line")
			{
				DataItemLink = "Document No."=field("No.");
				DataItemTableView = where("Line Type"=filter("Budget Info"));
				column(ReportForNavId_22; 22) {} // Autogenerated by ForNav - Do not delete
				column(location_Meals; Meals."location.")
				{
				}
				column(date_Meals; Meals.date)
				{
				}
				column(Description_Meals; Meals.Description)
				{
				}
				column(noOfDays_Meals; Meals.noOfDays)
				{
				}
				column(Amount_Meals; Meals.Amount)
				{
				}
				column(TravelLineTotal_Meals; Meals."Travel Line Total")
				{
				}
				trigger OnAfterGetRecord();
				begin
					SNo+=1;
					if Type=Type::Item then begin
					Item.Get("No.");
					Item.CalcFields(Inventory);
					Inventory:=Item.Inventory;
					end else
					Inventory:=0;
				end;
				
			}
			dataitem(Other;"Purchase Line")
			{
				DataItemLink = "Document No."=field("No.");
				DataItemTableView = where("Line Type"=filter("Budget Notes"));
				column(ReportForNavId_27; 27) {} // Autogenerated by ForNav - Do not delete
				column(date_Other; Other.date)
				{
				}
				column(Description_Other; Other.Description)
				{
				}
				column(Amount_Other; Other.Amount)
				{
				}
				column(TravelLineTotal_Other; Other."Travel Line Total")
				{
				}
				trigger OnAfterGetRecord();
				begin
					SNo+=1;
					if Type=Type::Item then begin
					Item.Get("No.");
					Item.CalcFields(Inventory);
					Inventory:=Item.Inventory;
					end else
					Inventory:=0;
				end;
				
			}
			dataitem("Approval Entry";"Approval Entry")
			{
				DataItemLink = "Document No."=field("No.");
				DataItemTableView = where("Document Type"=const(Quote),Status=const(Approved));
				column(ReportForNavId_1102755002; 1102755002) {} // Autogenerated by ForNav - Do not delete
				column(SequenceNo_ApprovalEntry; "Approval Entry"."Sequence No.")
				{
				}
				column(SenderID_ApprovalEntry; "Approval Entry"."Sender ID")
				{
				}
				column(ApproverID_ApprovalEntry; "Approval Entry"."Approver ID")
				{
				}
				column(DateTimeSentforApproval_ApprovalEntry; "Approval Entry"."Date-Time Sent for Approval")
				{
				}
				column(LastDateTimeModified_ApprovalEntry; "Approval Entry"."Last Date-Time Modified")
				{
				}
			}
			trigger OnAfterGetRecord();
			begin
				DimVal.Reset;
				DimVal.SetRange(Code,"Shortcut Dimension 1 Code");
				if DimVal.FindFirst then
				Dim1Name:=DimVal.Name;
				DimVal.Reset;
				DimVal.SetRange(Code,"Shortcut Dimension 2 Code");
				if DimVal.FindFirst then
				Dim2Name:=DimVal.Name;
				if "Purchase Header"."Requester Signature".Hasvalue=false then begin
				  HREmployees.Get("Purchase Header"."Employee No");
				  //HREmployees.CALCFIELDS("Employee Signature");
				  //"Purchase Header"."Requester Signature":=HREmployees."Employee Signature";
				  ApprovalEntry.Reset;
				  ApprovalEntry.SetRange("Document No.","Purchase Header"."No.");
				  ApprovalEntry.SetRange("Sequence No.",1);
				  if ApprovalEntry.FindFirst then begin
					"Purchase Header".RequesterDate:=ApprovalEntry."Date-Time Sent for Approval";
					end;
				  end;
				if "Purchase Header".Approver1Name='' then begin
				ApprovalEntry.Reset;
				ApprovalEntry.SetRange("Document No.","Purchase Header"."No.");
				ApprovalEntry.SetRange("Sequence No.",1);
				ApprovalEntry.SetRange(Status,ApprovalEntry.Status::Approved);
				if ApprovalEntry.FindFirst then begin
				  HREmployees.Reset;
				  HREmployees.SetRange("User ID",ApprovalEntry."Approver ID");
				  if HREmployees.FindFirst then begin
				 // HREmployees.CALCFIELDS("Employee Signature");
				 // "Purchase Header".Approver1Signature:=HREmployees."Employee Signature";
				  "Purchase Header".Approver1Name:=HREmployees.FullName;
				  "Purchase Header".Approver1Date:=ApprovalEntry."Last Date-Time Modified";
				  end;
				  end;
				  end;
				if "Purchase Header".Approver2Name='' then begin
				ApprovalEntry.Reset;
				ApprovalEntry.SetRange("Document No.","Purchase Header"."No.");
				ApprovalEntry.SetRange("Sequence No.",2);
				ApprovalEntry.SetRange(Status,ApprovalEntry.Status::Approved);
				if ApprovalEntry.FindFirst then begin
				  HREmployees.Reset;
				  HREmployees.SetRange("User ID",ApprovalEntry."Approver ID");
				  if HREmployees.FindFirst then begin
				 // HREmployees.CALCFIELDS("Employee Signature");
				 // "Purchase Header".Approver2Signature:=HREmployees."Employee Signature";
				  "Purchase Header".Approver2Name:=HREmployees.FullName;
				  "Purchase Header".Approver2Date:=ApprovalEntry."Last Date-Time Modified";
				  end;
				  end;
				  end;
				if "Purchase Header".Approver3Name='' then begin
				ApprovalEntry.Reset;
				ApprovalEntry.SetRange("Document No.","Purchase Header"."No.");
				ApprovalEntry.SetRange("Sequence No.",3);
				ApprovalEntry.SetRange(Status,ApprovalEntry.Status::Approved);
				if ApprovalEntry.FindFirst then begin
				  HREmployees.Reset;
				  HREmployees.SetRange("User ID",ApprovalEntry."Approver ID");
				  if HREmployees.FindFirst then begin
				  //HREmployees.CALCFIELDS("Employee Signature");
				  //"Purchase Header".Approver3Signature:=HREmployees."Employee Signature";
				  "Purchase Header".Approver3Name:=HREmployees.FullName;
				  "Purchase Header".Approver3Date:=ApprovalEntry."Last Date-Time Modified";
				  end;
				  end;
				  end;
				  "Purchase Header".Modify;
			end;
			
		}
	}

	requestpage
	{

  
		SaveValues = false;	  layout
		{
			area(content)
			{
				group(Options)
				{
					Caption = 'Options';
					// field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					// {
					// 	ApplicationArea = Basic;
					// 	Caption = 'Design';
					// 	Visible = ReportForNavAllowDesign;
					// 	trigger OnValidate()
					// 	begin
					// 		ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
					// 		CurrReport.RequestOptionsPage.Close();
					// 	end;

					// }
				}
			}
		}

		actions
		{
		}
		trigger OnOpenPage()
		begin
			//ReportForNavOpenDesigner := false;
		end;
	}

	trigger OnInitReport()
	begin
		//;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		//;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		CompanyINfo.Get;
		CompanyINfo.CalcFields(Picture);
		SNo:=0;
		Dim1Name:='';
		Dim2Name:='';
		//;ReportsForNavPre;
	end;
	var
		CompanyINfo: Record "Company Information";
		Inventory: Decimal;
		SNo: Integer;
		Item: Record Item;
		DimVal: Record "Dimension Value";
		Dim1Name: Text;
		Dim2Name: Text;
		HREmployees: Record "HR Employees";
		ApprovalEntry: Record "Approval Entry";

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	// var 
	// 	[WithEvents]
	// 	ReportForNav : DotNet ForNavReport80053_v6_0_0_2068;
	// 	ReportForNavOpenDesigner : Boolean;
	// 	[InDataSet]
	// 	ReportForNavAllowDesign : Boolean;

	// local procedure ReportsForNavInit();
	// var
	// 	addInFileName : Text;
	// 	tempAddInFileName : Text;
	// 	path: DotNet Path;
	// 	ApplicationSystemConstants: Codeunit "Application System Constants";
	// begin
	// 	addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_0_0_2068\ForNav.Reports.6.0.0.2068.dll';
	// 	if not File.Exists(addInFileName) then begin
	// 		tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.0.0.2068.dll';
	// 		if not File.Exists(tempAddInFileName) then
	// 			Error('Please install the ForNAV DLL version 6.0.0.2068 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
	// 	end;
	// 	ReportForNav:= ReportForNav.Report_6_0_0_2068(CurrReport.ObjectId(), CurrReport.Language(), SerialNumber(), UserId(), CompanyName());
	// 	ReportForNav.Init();
	// end;

	// local procedure ReportsForNavPre();
	// begin
	// 	ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
	// 	if not ReportForNav.Pre() then CurrReport.Quit();
	// end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
