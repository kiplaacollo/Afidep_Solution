// dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
// {	
// 	assembly("ForNav.Reports.6.0.0.2068")
// 	{
// 		type(ForNav.Report_6_0_0_2068; ForNavReport80025_v6_0_0_2068){}   
// 	}
// } // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 80025 "LPO"
{
    RDLCLayout = './Layouts/LPO.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Purchase Header"; "Purchase Header")
        {
            DataItemTableView = sorting("No.", "Document Type") where("Document Type" = filter(Order));
            RequestFilterFields = "No.", "Document Type";
            column(ReportForNavId_4458; 4458) { } // Autogenerated by ForNav - Do not delete
            column(Purchase_Header_Document_Type; "Document Type")
            {
            }
            column(Purchase_Header_No_; "No.")
            {
            }
            column(BuyfromVendorNo_PurchaseHeader; "Purchase Header"."Buy-from Vendor No.")
            {
            }
            column(OrderDate_PurchaseHeader; "Purchase Header"."Order Date")
            {
            }
            dataitem("Purchase Line"; "Purchase Line")
            {
                DataItemLink = "Document No." = field("No.");
                DataItemTableView = sorting("Document Type", "Document No.", "Line No.");
                column(ReportForNavId_6547; 6547) { } // Autogenerated by ForNav - Do not delete
                column(CompanyInfo_Picture; CompanyInfo.Picture)
                {
                }
                column(CompanyInfo__Country_Region_Code_; CompanyInfo."Country/Region Code")
                {
                }
                column(CompanyInfo_City; CompanyInfo.City)
                {
                }
                column(CompanyInfo__Address_2_; CompanyInfo."Address 2")
                {
                }
                column(CompanyInfo_Address; CompanyInfo.Address)
                {
                }
                column(CompanyInfo_Name; CompanyInfo.Name)
                {
                }
                column(CompanyInfo__Phone_No__; CompanyInfo."Phone No.")
                {
                }
                column(CompanyInfo__Fax_No__; CompanyInfo."Fax No.")
                {
                }
                column(CompanyInfo__E_Mail_; CompanyInfo."E-Mail")
                {
                }
                column(CompanyInfo__Home_Page_; CompanyInfo."Home Page")
                {
                }
                column(Purchase_Header___No__; "Purchase Header"."No.")
                {
                }
                column(FORMAT__Purchase_Line___Order_Date__0_4_; Format("Purchase Line"."Order Date", 0, 4))
                {
                }
                column(Purchase_Header___Buy_from_Vendor_Name_; "Purchase Header"."Buy-from Vendor Name")
                {
                }
                column(VendorAddr; VendorAddr)
                {
                }
                column(VendorCity; VendorCity)
                {
                }
                column(VendorPostCod; VendorPostCod)
                {
                }
                column(VendorTel; VendorTel)
                {
                }
                column(Purchase_Line_Quantity; Quantity)
                {
                }
                column(Purchase_Line_Description; Description)
                {
                }
                column(Purchase_Line__Unit_Cost_; "Unit Cost")
                {
                }
                column(Purchase_Line_Amount; Amount)
                {
                }
                column(Purchase_Line_Amount_Control1000000133; Amount)
                {
                }
                // column(CurrReport_PAGENO; Format(ReportForNav.PageNo))
                // {
                // }
                column(Purchase_Header___Created_By_; "Purchase Header"."User ID")
                {
                }
                column(Purchase_Header___Date_Created_; "Purchase Header"."Document Date")
                {
                }
                column(Tel_Caption; Tel_CaptionLbl)
                {
                }
                column(Fax_Caption; Fax_CaptionLbl)
                {
                }
                column(Email_Caption; Email_CaptionLbl)
                {
                }
                column(Web_Caption; Web_CaptionLbl)
                {
                }
                column(PURCHASE_ORDERCaption; PURCHASE_ORDERCaptionLbl)
                {
                }
                column(Order_DateCaption; Order_DateCaptionLbl)
                {
                }
                column(Order_No_Caption; Order_No_CaptionLbl)
                {
                }
                column(SUPPLIER_Caption; SUPPLIER_CaptionLbl)
                {
                }
                column(QuantityCaption; QuantityCaptionLbl)
                {
                }
                column(Unit_CostCaption; Unit_CostCaptionLbl)
                {
                }
                column(Total_Unit_CostCaption; Total_Unit_CostCaptionLbl)
                {
                }
                column(DescriptionCaption; DescriptionCaptionLbl)
                {
                }
                column(TotalCaption; TotalCaptionLbl)
                {
                }
                column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
                {
                }
                column(TERMS_AND_CONDITIONSCaption; TERMS_AND_CONDITIONSCaptionLbl)
                {
                }
                column(V1__This_LPO_is_valid_for_30_daysCaption; V1__This_LPO_is_valid_for_30_daysCaptionLbl)
                {
                }
                column(V3__TI_Kenya_reserves_the_right_to_return_all_the_goods_which_may_be_found_defective_during_consumptionCaption; V3__TI_Kenya_reserves_the_right_to_return_all_the_goods_which_may_be_found_defective_during_consumptionCaptionLbl)
                {
                }
                column(V2__All_the_goods_services_supplied_MUST_be_as_per_order_and_MUST_meet_all_the_specified_conditionsCaption; V2__All_the_goods_services_supplied_MUST_be_as_per_order_and_MUST_meet_all_the_specified_conditionsCaptionLbl)
                {
                }
                column(V5__All_payment_will_be_by_crossed_cheques_issued_by_TI_Kenya_and_in_line_with_stated_terms_Caption; V5__All_payment_will_be_by_crossed_cheques_issued_by_TI_Kenya_and_in_line_with_stated_terms_CaptionLbl)
                {
                }
                column(V4__Goods_services_are_received_subject_to_verification_in_due_courseCaption; V4__Goods_services_are_received_subject_to_verification_in_due_courseCaptionLbl)
                {
                }
                column(where_such_conditions_could_not_be_verified_or_established_during_receipt_of_the_goods_Caption; where_such_conditions_could_not_be_verified_or_established_during_receipt_of_the_goods_CaptionLbl)
                {
                }
                column(V6__The_prices_on_the_LPO_include_delivery_costs_to_the_specified_delivery_receiving_pointCaption; V6__The_prices_on_the_LPO_include_delivery_costs_to_the_specified_delivery_receiving_pointCaptionLbl)
                {
                }
                column(Date_Caption; Date_CaptionLbl)
                {
                }
                column(Date_Caption_Control1000000025; Date_Caption_Control1000000025Lbl)
                {
                }
                column(Date_Caption_Control1000000027; Date_Caption_Control1000000027Lbl)
                {
                }
                column(Signature_Caption; Signature_CaptionLbl)
                {
                }
                column(Signature_Caption_Control1000000030; Signature_Caption_Control1000000030Lbl)
                {
                }
                column(Signature_Caption_Control1000000031; Signature_Caption_Control1000000031Lbl)
                {
                }
                column(EmptyStringCaption; EmptyStringCaptionLbl)
                {
                }
                column(EmptyStringCaption_Control1000000034; EmptyStringCaption_Control1000000034Lbl)
                {
                }
                column(EmptyStringCaption_Control1000000035; EmptyStringCaption_Control1000000035Lbl)
                {
                }
                column(EmptyStringCaption_Control1000000037; EmptyStringCaption_Control1000000037Lbl)
                {
                }
                column(EmptyStringCaption_Control1000000038; EmptyStringCaption_Control1000000038Lbl)
                {
                }
                column(EmptyStringCaption_Control1000000039; EmptyStringCaption_Control1000000039Lbl)
                {
                }
                column(EmptyStringCaption_Control1000000040; EmptyStringCaption_Control1000000040Lbl)
                {
                }
                column(V7__Payment_Terms__Payment_shall_be_made_30_days_after_the_invoice_dateCaption; V7__Payment_Terms__Payment_shall_be_made_30_days_after_the_invoice_dateCaptionLbl)
                {
                }
                column(Prepared_By_Finance_Officer__Caption; Prepared_By_Finance_Officer__CaptionLbl)
                {
                }
                column(Checked_By_Head_of_Finance__Caption; Checked_By_Head_of_Finance__CaptionLbl)
                {
                }
                column(Authorised_By_Executive_Director_Caption; Authorised_By_Executive_Director_CaptionLbl)
                {
                }
                column(Purchase_Line_Document_Type; "Document Type")
                {
                }
                column(Purchase_Line_Document_No_; "Document No.")
                {
                }
                column(Purchase_Line_Line_No_; "Line No.")
                {
                }
                column(FUND; "Purchase Line"."Shortcut Dimension 1 Code")
                {
                }
                trigger OnPreDataItem();
                begin
                    LastFieldNo := FieldNo("Document Type");
                end;

                trigger OnAfterGetRecord();
                begin
                    if VendorInfo.Get("Purchase Header"."Buy-from Vendor No.") then
                        VendorAddr := VendorInfo.Address;
                    VendorCity := VendorInfo.City;
                    VendorPostCod := VendorInfo."Post Code";
                    VendorTel := VendorInfo."Phone No.";
                end;

            }
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    // field(ForNavOpenDesigner;ReportForNavOpenDesigner)
                    // {
                    // 	ApplicationArea = Basic;
                    // 	Caption = 'Design';
                    // 	Visible = ReportForNavAllowDesign;
                    // 	trigger OnValidate()
                    // 	begin
                    // 		ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                    // 		CurrReport.RequestOptionsPage.Close();
                    // 	end;

                    // }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ///	ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        CompanyInfo.Get;
        CompanyInfo.CalcFields(Picture);
        //;ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;ReportsForNavPre;
    end;

    var
        LastFieldNo: Integer;
        FooterPrinted: Boolean;
        VendorInfo: Record Vendor;
        CompanyInfo: Record "Company Information";
        VendorAddr: Text[30];
        VendorCity: Text[30];
        VendorPostCod: Code[10];
        VendorTel: Code[20];
        BankAccount: Code[10];
        PurchLine: Record "Purchase Line";
        Tel_CaptionLbl: label 'Tel:';
        Fax_CaptionLbl: label 'Fax:';
        Email_CaptionLbl: label 'Email:';
        Web_CaptionLbl: label 'Web:';
        PURCHASE_ORDERCaptionLbl: label 'PURCHASE ORDER';
        Order_DateCaptionLbl: label 'Order Date';
        Order_No_CaptionLbl: label 'Order No.';
        SUPPLIER_CaptionLbl: label 'SUPPLIER:';
        QuantityCaptionLbl: label 'Quantity';
        Unit_CostCaptionLbl: label 'Unit Cost';
        Total_Unit_CostCaptionLbl: label 'Total Unit Cost';
        DescriptionCaptionLbl: label 'Description';
        TotalCaptionLbl: label 'Total';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        TERMS_AND_CONDITIONSCaptionLbl: label 'TERMS AND CONDITIONS';
        V1__This_LPO_is_valid_for_30_daysCaptionLbl: label 'NOTE: The National Council of Churches of Kenya will accept responsibility for payment for';
        V3__TI_Kenya_reserves_the_right_to_return_all_the_goods_which_may_be_found_defective_during_consumptionCaptionLbl: label 'goods and/or services supplied and invoiced in it''s name ONLY where the provision of such';
        V2__All_the_goods_services_supplied_MUST_be_as_per_order_and_MUST_meet_all_the_specified_conditionsCaptionLbl: label 'and/or services has been covered by our official order signed by an authorised person.It is';
        V5__All_payment_will_be_by_crossed_cheques_issued_by_TI_Kenya_and_in_line_with_stated_terms_CaptionLbl: label 'the suppliers responsibility to establish the identity and credibility of the of the good.';
        V4__Goods_services_are_received_subject_to_verification_in_due_courseCaptionLbl: label 'Please return the duplicate of this order with the goods.';
        where_such_conditions_could_not_be_verified_or_established_during_receipt_of_the_goods_CaptionLbl: label 'the suppliers responsibility to establish the identity and credibility of the recipient of the good.';
        V6__The_prices_on_the_LPO_include_delivery_costs_to_the_specified_delivery_receiving_pointCaptionLbl: label '';
        Date_CaptionLbl: label 'Date:';
        Date_Caption_Control1000000025Lbl: label 'Date:';
        Date_Caption_Control1000000027Lbl: label 'Date:';
        Signature_CaptionLbl: label 'Signature:';
        Signature_Caption_Control1000000030Lbl: label 'Signature:';
        Signature_Caption_Control1000000031Lbl: label 'Signature:';
        EmptyStringCaptionLbl: label '__________________________';
        EmptyStringCaption_Control1000000034Lbl: label '__________________________';
        EmptyStringCaption_Control1000000035Lbl: label '__________________________';
        EmptyStringCaption_Control1000000037Lbl: label '__________________________';
        EmptyStringCaption_Control1000000038Lbl: label '__________________________';
        EmptyStringCaption_Control1000000039Lbl: label '__________________________';
        EmptyStringCaption_Control1000000040Lbl: label '__________________________';
        V7__Payment_Terms__Payment_shall_be_made_30_days_after_the_invoice_dateCaptionLbl: label '7. Payment Terms: Payment shall be made 30 days after the invoice date';
        Prepared_By_Finance_Officer__CaptionLbl: label 'Prepared By Finance Officer: ';
        Checked_By_Head_of_Finance__CaptionLbl: label 'Checked By Head of Finance: ';
        Authorised_By_Executive_Director_CaptionLbl: label 'Authorised By Executive Director:';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    // var 
    // 	[WithEvents]
    // 	ReportForNav : DotNet ForNavReport80025_v6_0_0_2068;
    // 	ReportForNavOpenDesigner : Boolean;
    // 	[InDataSet]
    // 	ReportForNavAllowDesign : Boolean;

    // local procedure ReportsForNavInit();
    // var
    // 	addInFileName : Text;
    // 	tempAddInFileName : Text;
    // 	path: DotNet Path;
    // 	ApplicationSystemConstants: Codeunit "Application System Constants";
    // begin
    // 	addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_0_0_2068\ForNav.Reports.6.0.0.2068.dll';
    // 	if not File.Exists(addInFileName) then begin
    // 		tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.0.0.2068.dll';
    // 		if not File.Exists(tempAddInFileName) then
    // 			Error('Please install the ForNAV DLL version 6.0.0.2068 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
    // 	end;
    // 	ReportForNav:= ReportForNav.Report_6_0_0_2068(CurrReport.ObjectId(), CurrReport.Language(), SerialNumber(), UserId(), CompanyName());
    // 	ReportForNav.Init();
    // end;

    // local procedure ReportsForNavPre();
    // begin
    // 	ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
    // 	if not ReportForNav.Pre() then CurrReport.Quit();
    // end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
