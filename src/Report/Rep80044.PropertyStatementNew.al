// dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
// {	
// 	assembly("ForNav.Reports.6.0.0.2068")
// 	{
// 		type(ForNav.Report_6_0_0_2068; ForNavReport80044_v6_0_0_2068){}   
// 	}
// } // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 80044 "Property Statement New"
{
	RDLCLayout = './Layouts/Property Statement New.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem(Customer;Customer)
		{
			RequestFilterFields = Property22;
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(PropertyName_Customer; Customer."Property Name22")
			{
			}
			column(Name_Customer; Customer.Name)
			{
			}
			column(No_Customer; Customer."No.")
			{
			}
			column(PhoneNo_Customer; Customer."Phone No.")
			{
			}
			column(EMail_Customer; Customer."E-Mail")
			{
			}
			column(BalanceLCY_Customer; Customer."Balance (LCY)")
			{
			}
			column(DateFilter_Customer; Customer."Date Filter")
			{
			}
			column(Balance_Customer; Customer.Balance)
			{
			}
			column(TenantFullName_Customer; Customer."Tenant Full Name 33")
			{
			}
			column(CreditAmount_Customer; Customer."Credit Amount")
			{
			}
			column(AccountNo_Customer; Customer."Account No2.")
			{
			}
			column(CompName; CompInfor.Name)
			{
			}
			column(CompAddress; CompInfor.Address)
			{
			}
			column(CompLogo; CompInfor.Picture)
			{
			}
			column(CompPhoneNo; CompInfor."Phone No.")
			{
			}
			column(CompEmail; CompInfor."E-Mail")
			{
			}
			column(Period; Period)
			{
			}
			column(WaterAmount; WaterAmount)
			{
			}
			column(RentAmount; RentAmount)
			{
			}
			column(BFBalance; BFBalance)
			{
			}
			column(PaidAmount; PaidAmount)
			{
			}
			column(Type; Type)
			{
			}
			column(AmountX; AmountX)
			{
			}
			dataitem(DetCust;"Detailed Cust. Ledg. Entry")
			{
				DataItemLink = "Customer No."=field("No.");
				column(ReportForNavId_9; 9) {} // Autogenerated by ForNav - Do not delete
				column(Period_DetCust; DetCust.Period)
				{
				}
				column(Ammenity_DetCust; DetCust.Ammenity)
				{
				}
				column(Amount_DetCust; DetCust.Amount)
				{
				}
				column(PostingDate_DetCust; DetCust."Posting Date")
				{
				}
				column(DebitAmount_DetCust; DetCust."Debit Amount")
				{
				}
				column(CreditAmount_DetCust; DetCust."Credit Amount")
				{
				}
				trigger OnPreDataItem();
				begin
					//DetCust.SETRANGE(DetCust.Period,Period);
				end;
				
			}
			trigger OnPreDataItem();
			begin
				//ReportForNav.GetDataItem('Customer').NewPagePerRecord := PrintOnlyOnePerPage;
			end;
			
			trigger OnAfterGetRecord();
			begin
				/*WaterAmount:=0;
				Detailed.RESET;
				Detailed.SETRANGE(Detailed."Customer No.",Customer."No.");
				Detailed.SETRANGE(Detailed.Period,Period);
				Detailed.SETRANGE(Detailed.Ammenity,'WATER');
				Detailed.SETFILTER(Detailed.Amount,'>%1',0);
				IF Detailed.FINDSET THEN BEGIN
				Detailed.CALCSUMS(Amount);
				WaterAmount:=Detailed.Amount;
				END;
				RentAmount:=0;
				Detailed.RESET;
				Detailed.SETRANGE(Detailed."Customer No.",Customer."No.");
				Detailed.SETRANGE(Detailed.Period,Period);
				Detailed.SETRANGE(Detailed.Ammenity,'RENT');
				Detailed.SETFILTER(Detailed.Amount,'>%1',0);
				IF Detailed.FINDSET THEN BEGIN
				Detailed.CALCSUMS(Amount);
				RentAmount:=Detailed.Amount;
				END;
				PaidAmount:=0;
				Detailed.RESET;
				Detailed.SETRANGE(Detailed."Customer No.",Customer."No.");
				Detailed.SETRANGE(Detailed.Period,Period);
				Detailed.SETFILTER(Detailed.Amount,'<%1',0);
				IF Detailed.FINDSET THEN BEGIN
				Detailed.CALCSUMS(Amount);
				PaidAmount:=Detailed.Amount;
				END;
				BFBalance:=0;
				Detailed.RESET;
				Detailed.SETRANGE(Detailed."Customer No.",Customer."No.");
				Detailed.SETFILTER(Detailed.Period,'<%1',Period);
				IF Detailed.FINDSET THEN BEGIN
				Detailed.CALCSUMS(Amount);
				BFBalance:=Detailed.Amount;
				END;*/
			
			end;
			
		}
	}

	requestpage
	{

  
		SaveValues = false;	  layout
		{
			area(content)
			{
				field(Period;Period)
				{
					ApplicationArea = Basic;
					Caption = 'Period';
					TableRelation = "Billing and Payments Periods"."Starting Date";
				}
				// field(ForNavOpenDesigner;ReportForNavOpenDesigner)
				// {
				// 	ApplicationArea = Basic;
				// 	Caption = 'Design';
				// 	Visible = ReportForNavAllowDesign;
				// 		trigger OnValidate()
				// 		begin
				// 			ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
				// 			CurrReport.RequestOptionsPage.Close();
				// 		end;

				// }
			}
		}

		actions
		{
		}
		trigger OnOpenPage()
		begin
			//ReportForNavOpenDesigner := false;
		end;
	}

	trigger OnInitReport()
	begin
		//;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		//;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		CompInfor.Reset;
		if CompInfor.Find('-') then begin
		CompInfor.CalcFields(CompInfor.Picture);
		end;
		//;ReportsForNavPre;
	end;
	var
		CompInfor: Record "Company Information";
		CustDateFilter: Text[30];
		PrintAmountsInLCY: Boolean;
		AmountCaption: Text[30];
		RemainingAmtCaption: Text[30];
		CustFilter: Text[250];
		CustLedgEntry: Record "Cust. Ledger Entry";
		PrintOnlyOnePerPage: Boolean;
		StartBalanceLCY: Decimal;
		StartBalAdjLCY: Decimal;
		Correction: Decimal;
		ApplicationRounding: Decimal;
		ExcludeBalanceOnly: Boolean;
		CustBalanceLCY: Decimal;
		WaterAmount: Decimal;
		RentAmount: Decimal;
		Period: Date;
		Detailed: Record "Detailed Cust. Ledg. Entry";
		BFBalance: Decimal;
		PaidAmount: Decimal;
		Type: Code[60];
		AmountX: Decimal;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	// var 
	// 	[WithEvents]
	// 	ReportForNav : DotNet ForNavReport80044_v6_0_0_2068;
	// 	ReportForNavOpenDesigner : Boolean;
	// 	[InDataSet]
	// 	ReportForNavAllowDesign : Boolean;

	// local procedure ReportsForNavInit();
	// var
	// 	addInFileName : Text;
	// 	tempAddInFileName : Text;
	// 	path: DotNet Path;
	// 	ApplicationSystemConstants: Codeunit "Application System Constants";
	// begin
	// 	addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_0_0_2068\ForNav.Reports.6.0.0.2068.dll';
	// 	if not File.Exists(addInFileName) then begin
	// 		tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.0.0.2068.dll';
	// 		if not File.Exists(tempAddInFileName) then
	// 			Error('Please install the ForNAV DLL version 6.0.0.2068 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
	// 	end;
	// 	ReportForNav:= ReportForNav.Report_6_0_0_2068(CurrReport.ObjectId(), CurrReport.Language(), SerialNumber(), UserId(), CompanyName());
	// 	ReportForNav.Init();
	// end;

	// local procedure ReportsForNavPre();
	// begin
	// 	ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
	// 	if not ReportForNav.Pre() then CurrReport.Quit();
	// end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
