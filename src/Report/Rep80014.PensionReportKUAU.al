// dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
// {	
// 	assembly("ForNav.Reports.6.0.0.2068")
// 	{
// 		type(ForNav.Report_6_0_0_2068; ForNavReport80014_v6_0_0_2068){}   
// 	}
// } // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 80014 "Pension Report (KU)_AU"
{
	RDLCLayout = './Layouts/Pension Report (KU)_AU.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Payroll Employee_AU";"Payroll Employee_AU")
		{
			DataItemTableView = where(Status=const(Active),"Contract Type"=const("Full Time"));
			column(ReportForNavId_1000000000; 1000000000) {} // Autogenerated by ForNav - Do not delete
			column(No; "Payroll Employee_AU"."No.")
			{
			}
			column(Basic; "Payroll Employee_AU"."Basic Pay")
			{
			}
			column(Name; Name)
			{
			}
			column(Pic; CompanyInfo.Picture)
			{
			}
			column(Period; Period)
			{
			}
			column(Statutory; Statutory)
			{
			}
			column(EmployerPension; EmployerPension)
			{
			}
			column(EmployeePension; EmployeePension)
			{
			}
			column(BankName; BankName)
			{
			}
			column(BranchName; BranchName)
			{
			}
			column(AccountNo; AccountNo)
			{
			}
			column(BankCode; BankCode)
			{
			}
			column(BranchCode; BranchCode)
			{
			}
			column(TotalPension; TotalPension)
			{
			}
			trigger OnPreDataItem();
			begin
				if CompanyInfo.Get () then
				CompanyInfo.CalcFields(CompanyInfo.Picture);
			end;
			
			trigger OnAfterGetRecord();
			begin
				Name:="Payroll Employee_AU".Surname+"Payroll Employee_AU".Firstname+"Payroll Employee_AU".Lastname;
				EmployeePension:=0;
				EmployerPension:=0;
				TotalPension:=0;
				PayrollMonthly.Reset;
				PayrollMonthly.SetRange(PayrollMonthly."No.","Payroll Employee_AU"."No.");
				PayrollMonthly.SetRange(PayrollMonthly."Payroll Period",Period);
				PayrollMonthly.SetRange(PayrollMonthly."Transaction Code",'2061');
				if PayrollMonthly.Find('-') then begin
				  EmployeePension:=PayrollMonthly.Amount;
				  EmployerPension:=(EmployeePension*2);
				  TotalPension:=EmployeePension+EmployerPension;
				end;
				//Transaction Bank Details
				TransCodes.Reset;
				TransCodes.SetRange(TransCodes."Transaction Code",'2061');
				if TransCodes.Find('-') then begin
				  BankCode:=TransCodes."Payable Bank Ac";
				  BankName:=TransCodes."Bank Name";
				  BranchCode:=TransCodes."Branch Code";
				  BranchName:=TransCodes."Branch Name";
				  AccountNo:=TransCodes."Account Number";
				end;
				if EmployerPension=0 then CurrReport.Skip;
			end;
			
		}
	}

	requestpage
	{

  
		SaveValues = false;	  layout
		{
			area(content)
			{
				field(Period;Period)
				{
					ApplicationArea = Basic;
					Caption = 'Period';
					TableRelation = "Payroll Calender_AU"."Date Opened";
				}
				// field(ForNavOpenDesigner;ReportForNavOpenDesigner)
				// {
				// 	ApplicationArea = Basic;
				// 	Caption = 'Design';
				// 	Visible = ReportForNavAllowDesign;
				// 		trigger OnValidate()
				// 		begin
				// 			ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
				// 			CurrReport.RequestOptionsPage.Close();
				// 		end;

				// }
			}
		}

		actions
		{
		}
		trigger OnOpenPage()
		begin
			//ReportForNavOpenDesigner := false;
		end;
	}

	trigger OnInitReport()
	begin
		//;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		//;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		//;ReportsForNavPre;
	end;
	var
		Period: Date;
		Statutory: Decimal;
		Deductions: Decimal;
		Benefits: Decimal;
		TDeductions: Decimal;
		Netpay: Decimal;
		TransCodes: Record "Payroll Transaction Code_AU";
		Name: Text;
		CompanyInfo: Record "Company Information";
		NSSF: Decimal;
		NHIF: Decimal;
		PAYE: Decimal;
		EmployeePension: Decimal;
		PayrollMonthly: Record "Payroll Monthly Trans_AU";
		EmployerPension: Decimal;
		BankName: Text;
		BranchName: Text;
		AccountNo: Text;
		BankCode: Code[20];
		BranchCode: Code[20];
		TotalPension: Decimal;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	// var 
	// 	[WithEvents]
	// 	ReportForNav : DotNet ForNavReport80014_v6_0_0_2068;
	// 	ReportForNavOpenDesigner : Boolean;
	// 	[InDataSet]
	// 	ReportForNavAllowDesign : Boolean;

	// local procedure ReportsForNavInit();
	// var
	// 	addInFileName : Text;
	// 	tempAddInFileName : Text;
	// 	path: DotNet Path;
	// 	ApplicationSystemConstants: Codeunit "Application System Constants";
	// begin
	// 	addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_0_0_2068\ForNav.Reports.6.0.0.2068.dll';
	// 	if not File.Exists(addInFileName) then begin
	// 		tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.0.0.2068.dll';
	// 		if not File.Exists(tempAddInFileName) then
	// 			Error('Please install the ForNAV DLL version 6.0.0.2068 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
	// 	end;
	// 	ReportForNav:= ReportForNav.Report_6_0_0_2068(CurrReport.ObjectId(), CurrReport.Language(), SerialNumber(), UserId(), CompanyName());
	// 	ReportForNav.Init();
	// end;

	// local procedure ReportsForNavPre();
	// begin
	// 	ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
	// 	if not ReportForNav.Pre() then CurrReport.Quit();
	// end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
