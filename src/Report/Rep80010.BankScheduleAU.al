// dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
// {	
// 	assembly("ForNav.Reports.6.0.0.2068")
// 	{
// 		type(ForNav.Report_6_0_0_2068; ForNavReport80010_v6_0_0_2068){}   
// 	}
// } // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 80010 "Bank Schedule_AU"
{
    RDLCLayout = './Layouts/Bank Schedule_AU.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Payroll Employee_AU"; "Payroll Employee_AU")
        {
            RequestFilterFields = "Bank Code", "Branch Code";
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            column(PF_No; "Payroll Employee_AU"."No.")
            {
            }
            column(Main_Bank; "Payroll Employee_AU"."Bank Code")
            {
            }
            column(Branch_Bank; "Payroll Employee_AU"."Branch Name")
            {
            }
            column(Bank_Code; "Payroll Employee_AU"."Bank Name")
            {
            }
            column(Branch_Code; "Payroll Employee_AU"."Branch Code")
            {
            }
            column(Acc_No; "Payroll Employee_AU"."Bank Account No")
            {
            }
            column(ContractStatus; "Payroll Employee_AU"."Contract Type")
            {
            }
            column(CompName; CompName)
            {
            }
            column(pic; info.Picture)
            {
            }
            column(Addr1; Addr1)
            {
            }
            column(Addr2; Addr2)
            {
            }
            column(Email; Email)
            {
            }
            column(Net_Pay; NetPay)
            {
            }
            column(Name; StrName)
            {
            }
            column(ContractType; "Payroll Employee_AU"."Contract Type")
            {
            }
            column(NCount; NCount)
            {
            }
            column(Period; Period)
            {
            }
            column(TNET; TNET)
            {
            }
            column(TotalNetAmount; TotalNetAmount)
            {
            }
            column(AccountCode_PayrollEmployee; "Payroll Employee_AU"."Account Code")
            {
            }
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(BankName_PayrollEmployeeAU; "Payroll Employee_AU"."Bank Name")
            {
            }
            column(BranchCode_PayrollEmployeeAU; "Payroll Employee_AU"."Branch Code")
            {
            }
            column(BranchName_PayrollEmployeeAU; "Payroll Employee_AU"."Branch Name")
            {
            }
            column(Tnet2; Tnet2)
            {
            }
            trigger OnPreDataItem();
            begin
                info.Reset;
                if info.Get then info.CalcFields(info.Picture);
                //Pict:=info.Picture;
                CompName := info.Name;
                Addr1 := info.Address;
                Addr2 := info.City;
                Email := info."E-Mail";
                TotalNetAmount := 0;
            end;

            trigger OnAfterGetRecord();
            begin
                NetPay := 0;
                NCount := 0;
                PCPeriods := periods;
                StrName := "Payroll Employee_AU".Surname + ' ' + "Payroll Employee_AU".Firstname + ' ' + "Payroll Employee_AU".Lastname;
                if "Payroll Employee_AU".Status = "Payroll Employee_AU".Status::Active then begin
                    prPeriodTransactions.Reset;
                    prPeriodTransactions.SetRange(prPeriodTransactions."No.", "Payroll Employee_AU"."No.");
                    prPeriodTransactions.SetRange(prPeriodTransactions."Payroll Period", periods);
                    prPeriodTransactions.CalcFields("Contract Type");
                    // prPeriodTransactions.SETRANGE(prPeriodTransactions."Contract Type","Payroll Employee_AU"."Contract Type");
                    prPeriodTransactions.SetRange(prPeriodTransactions."Transaction Code", 'NPAY');
                    if prPeriodTransactions.Find('-') then begin
                        NetPay := prPeriodTransactions.Amount;
                        NetPay := ROUND(NetPay, 1, '=');
                        TNpay := TNpay + NetPay;
                        //MESSAGE(FORMAT(TotalNetAmount));
                        if NetPay > 0 then
                            NCount := NCount + 1;
                    end;
                end else begin
                    CurrReport.Skip;
                end;
                TotalNetAmount := TotalNetAmount + NetPay;
                PCalender.Reset;
                if PCalender.Get(periods) then
                    Period := PCalender."Period Name";
                TNET := TNET + NetPay;
                PayrollMonthly.Reset;
                PayrollMonthly.SetRange(PayrollMonthly."Payroll Period", periods);
                PayrollMonthly.SetRange(PayrollMonthly."Transaction Code", 'NPAY');
                PayrollMonthly.SetFilter(Amount, '>%1', 0);
                if PayrollMonthly.FindSet then begin
                    repeat
                        Tnet2 := Tnet2 + ROUND(PayrollMonthly.Amount, 1, '=');
                    until PayrollMonthly.Next = 0;
                end;
                //Tnet2:=ROUND(Tnet2,1,'=');
            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                field(Period; periods)
                {
                    ApplicationArea = Basic;
                    Caption = 'Period:';
                    TableRelation = "Payroll Calender_AU"."Date Opened";
                }
                // field(ForNavOpenDesigner;ReportForNavOpenDesigner)
                // {
                // 	ApplicationArea = Basic;
                // 	Caption = 'Design';
                // 	Visible = ReportForNavAllowDesign;
                // 		trigger OnValidate()
                // 		begin
                // 			ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                // 			CurrReport.RequestOptionsPage.Close();
                // 		end;

                // }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        //;ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        if UserSetup.Get(UserId) then begin
            if UserSetup."View Payroll" = false then Error('You dont have permissions for payroll, Contact your system administrator! ')
        end;
        //;ReportsForNavPre;
    end;

    var
        UserSetup: Record "User Setup";
        StrName: Text[100];
        prPeriodTransactions: Record "Payroll Monthly Trans_AU";
        periods: Date;
        info: Record "Company Information";
        CompName: Text[50];
        Addr1: Text[50];
        Addr2: Text[50];
        Email: Text[50];
        NetPay: Decimal;
        NCount: Integer;
        Period: Text;
        PCalender: Record "Payroll Calender_AU";
        PCPeriods: Date;
        TNpay: Decimal;
        TotalNetAmount: Decimal;
        Bankname: Text;
        branchname: Text;
        TNET: Decimal;
        Tnet2: Decimal;
        PayrollMonthly: Record "Payroll Monthly Trans_AU";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    // var 
    // 	[WithEvents]
    // 	ReportForNav : DotNet ForNavReport80010_v6_0_0_2068;
    // 	ReportForNavOpenDesigner : Boolean;
    // 	[InDataSet]
    // 	ReportForNavAllowDesign : Boolean;

    // local procedure ReportsForNavInit();
    // var
    // 	addInFileName : Text;
    // 	tempAddInFileName : Text;
    // 	path: DotNet Path;
    // 	ApplicationSystemConstants: Codeunit "Application System Constants";
    // begin
    // 	addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_0_0_2068\ForNav.Reports.6.0.0.2068.dll';
    // 	if not File.Exists(addInFileName) then begin
    // 		tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.0.0.2068.dll';
    // 		if not File.Exists(tempAddInFileName) then
    // 			Error('Please install the ForNAV DLL version 6.0.0.2068 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
    // 	end;
    // 	ReportForNav:= ReportForNav.Report_6_0_0_2068(CurrReport.ObjectId(), CurrReport.Language(), SerialNumber(), UserId(), CompanyName());
    // 	ReportForNav.Init();
    // end;

    // local procedure ReportsForNavPre();
    // begin
    // 	ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
    // 	if not ReportForNav.Pre() then CurrReport.Quit();
    // end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
