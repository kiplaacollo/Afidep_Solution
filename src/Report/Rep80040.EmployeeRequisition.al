report 80040 "Employee Requisition"
{
    // RDLCLayout = './Layouts/EmployeeRequisition.rdlc';
    // DefaultLayout = RDLC;


    DefaultLayout = Word;//
    WordLayout = 'Layouts/HR Recruitment Request Form.docx';

    dataset
    {
        dataitem("HR Employee Requisitions"; "HR Employee Requisitions")
        {
            column(ReportForNavId_1102755000; 1102755000) { } // Autogenerated by ForNav - Do not delete
            column(Requisition_No_; "Requisition No.")
            {
            }
            column(Requisition_Date; "Requisition Date")
            {
            }
            column(Requestor; Requestor)
            {
            }

            column(Job_ID; "Job ID")
            {
            }
            column(Job_Description; "Job Description") { }
            column(Reason_For_Request; "Reason For Request")
            {
            }

            column(Type_of_Contract_Required; "Type of Contract Required")
            {
            }
            column(Priority; Priority)
            {
            }
            column(Vacant_Positions; "Vacant Positions")
            {
            }
            column(dim1name; Dim1Name)
            {
            }
            column(dim2name; Dim2Name)
            {
            }
            column(Date_Advertised; "Date Advertised")
            {
            }
            column(Global_Dimension_2_Code; "Global Dimension 2 Code") { }
            column(Global_Dimension_1_Code; "Global Dimension 1 Code") { }
            column(Reporting_Date; "Reporting Date") { }
            column(Line_Manager; "Line Manager") { }
            column(JD_Attached; "JD Attached") { }
            column(Budgeted_Amount; "Budgeted Amount") { }
            column(Monthly_Salary; "Monthly Salary") { }
            column(Jobtitle; Jobtitle) { }
            column(Phone; Phone) { }
            column(Email; Email) { }
            column(Program; Program) { }
            column(RequestorName; RequestorName) { }
            column(Requisition_Type; "Requisition Type") { }
            column(Field_of_Study; "Field of Study") { }
            column(Education_Level; "Education Level") { }
            column(Education_Type; "Education Type") { }
            column(Proficiency_Level; "Proficiency Level") { }
            column(Professional_Course; "Professional Course") { }
            column(Minimum_years_of_experience; "Minimum years of experience") { }
            column(Maximum_years_of_experience; "Maximum years of experience") { }
            column(Approver1Date; Approver1Date) { }
            column(Approver1Name; Approver1Name) { }
            column(Approver1Signature; Approver1Signature) { }
            column(Approver2Date; Approver2Date) { }
            column(Approver2Name; Approver2Name) { }
            column(Approver2Signature; Approver2Signature) { }
            column(Approver3Date; Approver3Date) { }
            column(Approver3Name; Approver3Name) { }
            column(Approver3Signature; Approver3Signature) { }

            column(Closing_Date; "Closing Date") { }

            dataitem("Approval Entry"; "Approval Entry")
            {
                DataItemLink = "Document No." = field("Requisition No.");
                DataItemTableView = where(Status = const(Approved));
                column(ReportForNavId_1102755002; 1102755002) { } // Autogenerated by ForNav - Do not delete
                column(SequenceNo_ApprovalEntry; "Approval Entry"."Sequence No.")
                {
                }
                column(SenderID_ApprovalEntry; "Approval Entry"."Sender ID")
                {
                }
                column(ApproverID_ApprovalEntry; "Approval Entry"."Approver ID")
                {
                }
                column(DateTimeSentforApproval_ApprovalEntry; "Approval Entry"."Date-Time Sent for Approval")
                {
                }
                column(LastDateTimeModified_ApprovalEntry; "Approval Entry"."Last Date-Time Modified")
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                // DimVal.Reset;
                // DimVal.SetRange(Code, "Shortcut Dimension 1 Code");
                // if DimVal.FindFirst then
                //     Dim1Name := DimVal.Name;
                DimVal.Reset;
                DimVal.SetRange(Code, "Global Dimension 2 Code");
                if DimVal.FindFirst then
                    Dim2Name := DimVal.Name;
                // DimVal.SetRange(Code, "Shortcut Dimension 4 Code");
                // if DimVal.FindFirst then
                //     Dim4Name := DimVal.Name;
                // DimVal.SetRange(Code, "Shortcut Dimension 3 Code");
                // if DimVal.FindFirst then
                //     Dim3Name := DimVal.Name;

                HREmp.Reset;
                HREmp.SetRange(HREmp."Employee UserID", Requestor);
                if HREmp.FindFirst then begin
                    Jobtitle := HREmp."Job Title";
                    Phone := HREmp."Cell Phone Number";
                    Email := HREmp."E-Mail";
                    Program := HREmp."Programme or Department";
                    RequestorName := HREmp."First Name" + ' ' + HREmp."Middle Name" + ' ' + HREmp."Last Name";
                end;

                ApprovalEntry.Reset;
                ApprovalEntry.SetRange("Document No.", "HR Employee Requisitions"."Requisition No.");
                ApprovalEntry.SetRange("Sequence No.", 1);
                ApprovalEntry.SetRange(Status, ApprovalEntry.Status::Approved);
                if ApprovalEntry.FindFirst then begin
                    HREmployees.Reset;
                    HREmployees.SetRange(HREmployees."Employee UserID", ApprovalEntry."Approver ID");
                    if HREmployees.FindFirst then begin
                        HREmployees.CALCFIELDS(Signature);
                        "HR Employee Requisitions".Approver1Signature := HREmployees.Signature;
                        "HR Employee Requisitions".Approver1Name := HREmployees."First Name" + ' ' + HREmployees."Middle Name" + ' ' + HREmployees."Last Name";
                        "HR Employee Requisitions".Approver1Date := ApprovalEntry."Last Date-Time Modified";
                    end;
                end;
                //end;
                //if "Purchase Header".Approver3Name = '' then begin
                ApprovalEntry.Reset;
                ApprovalEntry.SetRange("Document No.", "HR Employee Requisitions"."Requisition No.");
                ApprovalEntry.SetRange("Sequence No.", 2);
                ApprovalEntry.SetRange(Status, ApprovalEntry.Status::Approved);
                if ApprovalEntry.FindFirst then begin
                    HREmployees.Reset;
                    HREmployees.SetRange(HREmployees."Employee UserID", ApprovalEntry."Approver ID");
                    if HREmployees.FindFirst then begin
                        HREmployees.CALCFIELDS(Signature);
                        "HR Employee Requisitions".Approver2Signature := HREmployees.Signature;
                        "HR Employee Requisitions".Approver2Name := HREmployees."First Name" + ' ' + HREmployees."Middle Name" + ' ' + HREmployees."Last Name";
                        "HR Employee Requisitions".Approver2Date := ApprovalEntry."Last Date-Time Modified";
                    end;
                end;
                //end;
                //if "Purchase Header".Approver4Name = '' then begin
                ApprovalEntry.Reset;
                ApprovalEntry.SetRange("Document No.", "HR Employee Requisitions"."Requisition No.");
                ApprovalEntry.SetRange("Sequence No.", 3);
                ApprovalEntry.SetRange(Status, ApprovalEntry.Status::Approved);
                if ApprovalEntry.FindFirst then begin
                    HREmployees.Reset;
                    HREmployees.SetRange(HREmployees."Employee UserID", ApprovalEntry."Approver ID");
                    if HREmployees.FindFirst then begin
                        HREmployees.CALCFIELDS(Signature);
                        "HR Employee Requisitions".Approver3Signature := HREmployees.Signature;
                        "HR Employee Requisitions".Approver3Name := HREmployees."First Name" + ' ' + HREmployees."Middle Name" + ' ' + HREmployees."Last Name";
                        "HR Employee Requisitions".Approver3Date := ApprovalEntry."Last Date-Time Modified";
                    end;
                end;
                //end;
                "HR Employee Requisitions".Modify;
            end;
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    // field(ForNavOpenDesigner;ReportForNavOpenDesigner)
                    // {
                    // 	ApplicationArea = Basic;
                    // 	Caption = 'Design';
                    // 	Visible = ReportForNavAllowDesign;
                    // 	trigger OnValidate()
                    // 	begin
                    // 		ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                    // 		CurrReport.RequestOptionsPage.Close();
                    // 	end;

                    // }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        //;ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompanyINfo.Get;
        CompanyINfo.CalcFields(Picture);
        SNo := 0;
        Dim1Name := '';
        Dim2Name := '';
        Dim4Name := '';
        Dim3Name := '';
        //;ReportsForNavPre;
    end;

    var
        CompanyINfo: Record "Company Information";
        Inventory: Decimal;
        SNo: Integer;
        Item: Record Item;
        DimVal: Record "Dimension Value";
        Dim1Name: Text;
        Dim2Name: Text;
        Dim4Name: Text;
        Dim3Name: Text;
        HREmp: Record "HR Employees";
        Jobtitle: Text[100];
        Phone: Code[50];
        Email: code[50];
        Program: Text[200];
        RequestorName: Text[200];
        HREmployees: Record "HR Employees";
        ApprovalEntry: Record "Approval Entry";

}