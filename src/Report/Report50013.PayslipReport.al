//<---------------------------------------------------------------------->															
#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings															
//51516310_v6_3_0_2259) { }															
// Autogenerated code - do not delete or modify -->															

Report 50013 "Payroll Payslip."
{
    RDLCLayout = 'Layouts/PayrollPayslip2_Au.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Payroll Employee."; "Payroll Employee_AU")
        {
            RequestFilterFields = "No.";
            // DataItemTableView = where("Currency Code" = filter('KES'));
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete															
            column(No; "Payroll Employee."."No.")
            {
            }
            column(Surname; "Payroll Employee.".Surname)
            {
            }
            column(FirstName; "Payroll Employee.".Firstname)
            {
            }
            column(Lastname; "Payroll Employee.".Lastname)
            {
            }
            column(CName; CompanyInfo.Name)
            {
            }
            column(CAddress; CompanyInfo.Address)
            {
            }
            column(CPic; CompanyInfo.Picture)
            {
            }
            column(PeriodName; PeriodName)
            {
            }
            column(PensionEmployerContrib; PensionEmployerContrib) { }
            column(PINNo; "Payroll Employee."."PIN No")
            {
            }
            column(NSSFNo; "Payroll Employee."."NSSF No")
            {
            }
            column(NHIFNo; "Payroll Employee."."NHIF No")
            {
            }
            column(BankName; "Payroll Employee."."Bank Name")
            {
            }
            column(BranchName; "Payroll Employee."."Branch Name")
            {
            }
            column(BankAccNo; "Payroll Employee."."Bank Account No")
            {
            }

            dataitem("prPeriod Transactions."; "Payroll Monthly Trans_AU")
            {
                DataItemLink = "No." = field("No."), "Payroll Period" = field("Current Month Filter");
                RequestFilterFields = "Payroll Period";
                column(ReportForNavId_6; 6) { } // Autogenerated by ForNav - Do not delete															
                column(TCode; "prPeriod Transactions."."Transaction Code")
                {
                }
                column(TName; "prPeriod Transactions."."Transaction Name")
                {
                }
                column(Amount; "prPeriod Transactions.".Amount)
                {
                }
                column(Amount2; Round("prPeriod Transactions.".Amount / CurrencyFactor))
                {
                }
                column(Grouping; "prPeriod Transactions.".Grouping)
                {
                }
                column(SubGroupOrder; "prPeriod Transactions.".SubGrouping) { }
                column(TBalances; Balance) { }
                column(PeriodMonth_prPeriodTransactions; "Period Month") { }
                column(PeriodYear_prPeriodTransactions; "Period Year") { }
                column(Department; Department) { }
                column(TotalDed; TotalDed) { }



            }
            trigger OnAfterGetRecord()
            begin
                PensionEmployerContrib := 0;
                PayrollEmp.Reset();
                PayrollEmp.SetRange(PayrollEmp."No.", "Payroll Employee."."No.");
                if PayrollEmp.Find('-') then begin
                    PensionEmployerContrib := PayrollEmp."Pension %-Employer" / 100 * PayrollEmp."Basic Pay";
                end;
                TotalDed := 0;
                PayrollTrans.Reset();
                PayrollTrans.SetRange(PayrollTrans."No.", "Payroll Employee."."No.");
                PayrollTrans.SetFilter(PayrollTrans."Transaction Code", 'DEDUCTIONS');
                if PayrollTrans.Find('-') then begin
                    TotalDed := TotalDed + PayrollTrans.Amount;
                end;
                /* PayrollMonthly.Reset;
                 PayrollMonthly.SetRange(PayrollMonthly."No.", "Payroll Employee_AU"."No.");
                 PayrollMonthly.SetRange(PayrollMonthly."Payroll Period", Period);
                 if PayrollMonthly.Find('-') then begin
                     repeat
                         TransCodes.Reset;
                         TransCodes.SetRange(TransCodes."Transaction Code", PayrollMonthly."Transaction Code");
                         TransCodes.SetRange(TransCodes."Transaction Type", TransCodes."transaction type"::Deduction);
                         if TransCodes.Find('-') then
                             Deductions := Deductions + PayrollMonthly.Amount;
                     until PayrollMonthly.Next = 0;
                 end;*/
            end;
        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            //:= false;															
        end;
    }

    trigger OnInitReport()
    begin
        ;


    end;

    trigger OnPostReport()
    begin
        ;

    end;

    trigger OnPreReport()
    begin

        CurrencyFactor := 0;
        CompanyInfo.Get;
        CompanyInfo.CalcFields(CompanyInfo.Picture);
        PayrollCalender.Reset;
        PayrollCalender.SetRange(PayrollCalender.Closed, false);
        if PayrollCalender.FindFirst then begin
            //"Payroll Period":=PayrollCalender."Date Opened";															
            PayrollCalender.Copyfilter(PayrollCalender."Date Opened", "prPeriod Transactions."."Payroll Period");
            PeriodName := PayrollCalender."Period Name";
            CurrencyFactor := PayrollCalender."Currency Code";
        end;
        if UserSetup.Get(UserId) then begin
            if UserSetup."View Payroll" = false then Error('You dont have permissions for payroll, Contact your system administrator! ')
        end;
        ;

    end;

    var
        CompanyInfo: Record "Company Information";
        PayrollCalender: Record "Payroll Calender_AU";
        "Payroll Period": Date;
        PeriodName: Text;
        PayrollEmp: Record "Payroll Employee_AU";
        PayrollTrans: Record "Payroll Monthly Trans_AU";
        UserSetup: Record "User Setup";
        Department: Decimal;

        PensionEmployerContrib: Decimal;
        EmployerContribution: Decimal;
        CurrencyFactor: Decimal;
        TotalDed: Decimal;


    // --> Reports ForNAV Autogenerated code - do not delete or modify															
    //51516310_v6_3_0_2259;															






    // Reports ForNAV Autogenerated code - do not delete or modify -->															
}



